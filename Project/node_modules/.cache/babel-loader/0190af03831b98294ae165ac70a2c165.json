{"ast":null,"code":"// import React, { ReactNode } from 'react';\n// import {\n//   IconButton,\n//   Avatar,\n//   Box,\n//   CloseButton,\n//   Flex,\n//   HStack,\n//   VStack,\n//   Icon,\n//   useColorModeValue,\n//   Link,\n//   Drawer,\n//   DrawerContent,\n//   Text,\n//   useDisclosure,\n//   BoxProps,\n//   FlexProps,\n//   Menu,\n//   MenuButton,\n//   MenuDivider,\n//   MenuItem,\n//   MenuList,\n// } from '@chakra-ui/react';\n// import {\n//   FiHome,\n//   FiTrendingUp,\n//   FiCompass,\n//   FiStar,\n//   FiSettings,\n//   FiMenu,\n//   FiBell,\n//   FiChevronDown,\n// } from 'react-icons/fi';\n// import { IconType } from 'react-icons';\n// import { ReactText } from 'react';\n\n// interface LinkItemProps {\n//   name: string;\n//   icon: IconType;\n// }\n// const LinkItems: Array<LinkItemProps> = [\n//   { name: 'Home', icon: FiHome },\n//   { name: 'Trending', icon: FiTrendingUp },\n//   { name: 'Explore', icon: FiCompass },\n//   { name: 'Favourites', icon: FiStar },\n//   { name: 'Settings', icon: FiSettings },\n// ];\n\n// export default function Sidebar({ children }) {\n//   const { isOpen, onOpen, onClose } = useDisclosure();\n//   return (\n//     <Box minH=\"100vh\" bg={useColorModeValue('gray.100', 'gray.900')}>\n//       <SidebarContent\n//         onClose={() => onClose}\n//         display={{ base: 'none', md: 'block' }}\n//       />\n//       <Drawer\n//         autoFocus={false}\n//         isOpen={isOpen}\n//         placement=\"left\"\n//         onClose={onClose}\n//         returnFocusOnClose={false}\n//         onOverlayClick={onClose}\n//         size=\"full\">\n//         <DrawerContent>\n//           <SidebarContent onClose={onClose} />\n//         </DrawerContent>\n//       </Drawer>\n//       {/* mobilenav */}\n//       <MobileNav onOpen={onOpen} />\n//       <Box ml={{ base: 0, md: 60 }} p=\"4\">\n//         {children}\n//       </Box>\n//     </Box>\n//   );\n// }\n\n// interface SidebarProps extends BoxProps {\n//   onClose: () => void;\n// }\n\n// const SidebarContent = ({ onClose, ...rest }: SidebarProps) => {\n//   return (\n//     <Box\n//       transition=\"3s ease\"\n//       bg={useColorModeValue('white', 'gray.900')}\n//       borderRight=\"1px\"\n//       borderRightColor={useColorModeValue('gray.200', 'gray.700')}\n//       w={{ base: 'full', md: 60 }}\n//       pos=\"fixed\"\n//       h=\"full\"\n//       {...rest}>\n//       <Flex h=\"20\" alignItems=\"center\" mx=\"8\" justifyContent=\"space-between\">\n//         <Text fontSize=\"2xl\" fontFamily=\"monospace\" fontWeight=\"bold\">\n//           Logo\n//         </Text>\n//         <CloseButton display={{ base: 'flex', md: 'none' }} onClick={onClose} />\n//       </Flex>\n//       {LinkItems.map((link) => (\n//         <NavItem key={link.name} icon={link.icon}>\n//           {link.name}\n//         </NavItem>\n//       ))}\n//     </Box>\n//   );\n// };\n\n// interface NavItemProps extends FlexProps {\n//   icon: IconType;\n//   children: ReactText;\n// }\n// const NavItem = ({ icon, children, ...rest }: NavItemProps) => {\n//   return (\n//     <Link\n//       href=\"#\"\n//       style={{ textDecoration: 'none' }}\n//       _focus={{ boxShadow: 'none' }}>\n//       <Flex\n//         align=\"center\"\n//         p=\"4\"\n//         mx=\"4\"\n//         borderRadius=\"lg\"\n//         role=\"group\"\n//         cursor=\"pointer\"\n//         _hover={{\n//           bg: 'cyan.400',\n//           color: 'white',\n//         }}\n//         {...rest}>\n//         {icon && (\n//           <Icon\n//             mr=\"4\"\n//             fontSize=\"16\"\n//             _groupHover={{\n//               color: 'white',\n//             }}\n//             as={icon}\n//           />\n//         )}\n//         {children}\n//       </Flex>\n//     </Link>\n//   );\n// };\n\n// interface MobileProps extends FlexProps {\n//   onOpen: () => void;\n// }\n// const MobileNav = ({ onOpen, ...rest }: MobileProps) => {\n//   return (\n//     <Flex\n//       ml={{ base: 0, md: 60 }}\n//       px={{ base: 4, md: 4 }}\n//       height=\"20\"\n//       alignItems=\"center\"\n//       bg={useColorModeValue('white', 'gray.900')}\n//       borderBottomWidth=\"1px\"\n//       borderBottomColor={useColorModeValue('gray.200', 'gray.700')}\n//       justifyContent={{ base: 'space-between', md: 'flex-end' }}\n//       {...rest}>\n//       <IconButton\n//         display={{ base: 'flex', md: 'none' }}\n//         onClick={onOpen}\n//         variant=\"outline\"\n//         aria-label=\"open menu\"\n//         icon={<FiMenu />}\n//       />\n\n//       <Text\n//         display={{ base: 'flex', md: 'none' }}\n//         fontSize=\"2xl\"\n//         fontFamily=\"monospace\"\n//         fontWeight=\"bold\">\n//         Logo\n//       </Text>\n\n//       <HStack spacing={{ base: '0', md: '6' }}>\n//         <IconButton\n//           size=\"lg\"\n//           variant=\"ghost\"\n//           aria-label=\"open menu\"\n//           icon={<FiBell />}\n//         />\n//         <Flex alignItems={'center'}>\n//           <Menu>\n//             <MenuButton\n//               py={2}\n//               transition=\"all 0.3s\"\n//               _focus={{ boxShadow: 'none' }}>\n//               <HStack>\n//                 <Avatar\n//                   size={'sm'}\n//                   src={\n//                     'https://images.unsplash.com/photo-1619946794135-5bc917a27793?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=b616b2c5b373a80ffc9636ba24f7a4a9'\n//                   }\n//                 />\n//                 <VStack\n//                   display={{ base: 'none', md: 'flex' }}\n//                   alignItems=\"flex-start\"\n//                   spacing=\"1px\"\n//                   ml=\"2\">\n//                   <Text fontSize=\"sm\">Justina Clark</Text>\n//                   <Text fontSize=\"xs\" color=\"gray.600\">\n//                     Admin\n//                   </Text>\n//                 </VStack>\n//                 <Box display={{ base: 'none', md: 'flex' }}>\n//                   <FiChevronDown />\n//                 </Box>\n//               </HStack>\n//             </MenuButton>\n//             <MenuList\n//               bg={useColorModeValue('white', 'gray.900')}\n//               borderColor={useColorModeValue('gray.200', 'gray.700')}>\n//               <MenuItem>Profile</MenuItem>\n//               <MenuItem>Settings</MenuItem>\n//               <MenuItem>Billing</MenuItem>\n//               <MenuDivider />\n//               <MenuItem>Sign out</MenuItem>\n//             </MenuList>\n//           </Menu>\n//         </Flex>\n//       </HStack>\n//     </Flex>\n//   );\n// };","map":{"version":3,"names":[],"sources":["C:/Users/Bhavesh/Desktop/Visual Studio/Unit4Project/CW-4/Project/src/Components/SideBar.jsx"],"sourcesContent":["// import React, { ReactNode } from 'react';\r\n// import {\r\n//   IconButton,\r\n//   Avatar,\r\n//   Box,\r\n//   CloseButton,\r\n//   Flex,\r\n//   HStack,\r\n//   VStack,\r\n//   Icon,\r\n//   useColorModeValue,\r\n//   Link,\r\n//   Drawer,\r\n//   DrawerContent,\r\n//   Text,\r\n//   useDisclosure,\r\n//   BoxProps,\r\n//   FlexProps,\r\n//   Menu,\r\n//   MenuButton,\r\n//   MenuDivider,\r\n//   MenuItem,\r\n//   MenuList,\r\n// } from '@chakra-ui/react';\r\n// import {\r\n//   FiHome,\r\n//   FiTrendingUp,\r\n//   FiCompass,\r\n//   FiStar,\r\n//   FiSettings,\r\n//   FiMenu,\r\n//   FiBell,\r\n//   FiChevronDown,\r\n// } from 'react-icons/fi';\r\n// import { IconType } from 'react-icons';\r\n// import { ReactText } from 'react';\r\n\r\n// interface LinkItemProps {\r\n//   name: string;\r\n//   icon: IconType;\r\n// }\r\n// const LinkItems: Array<LinkItemProps> = [\r\n//   { name: 'Home', icon: FiHome },\r\n//   { name: 'Trending', icon: FiTrendingUp },\r\n//   { name: 'Explore', icon: FiCompass },\r\n//   { name: 'Favourites', icon: FiStar },\r\n//   { name: 'Settings', icon: FiSettings },\r\n// ];\r\n\r\n// export default function Sidebar({ children }) {\r\n//   const { isOpen, onOpen, onClose } = useDisclosure();\r\n//   return (\r\n//     <Box minH=\"100vh\" bg={useColorModeValue('gray.100', 'gray.900')}>\r\n//       <SidebarContent\r\n//         onClose={() => onClose}\r\n//         display={{ base: 'none', md: 'block' }}\r\n//       />\r\n//       <Drawer\r\n//         autoFocus={false}\r\n//         isOpen={isOpen}\r\n//         placement=\"left\"\r\n//         onClose={onClose}\r\n//         returnFocusOnClose={false}\r\n//         onOverlayClick={onClose}\r\n//         size=\"full\">\r\n//         <DrawerContent>\r\n//           <SidebarContent onClose={onClose} />\r\n//         </DrawerContent>\r\n//       </Drawer>\r\n//       {/* mobilenav */}\r\n//       <MobileNav onOpen={onOpen} />\r\n//       <Box ml={{ base: 0, md: 60 }} p=\"4\">\r\n//         {children}\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// }\r\n\r\n// interface SidebarProps extends BoxProps {\r\n//   onClose: () => void;\r\n// }\r\n\r\n// const SidebarContent = ({ onClose, ...rest }: SidebarProps) => {\r\n//   return (\r\n//     <Box\r\n//       transition=\"3s ease\"\r\n//       bg={useColorModeValue('white', 'gray.900')}\r\n//       borderRight=\"1px\"\r\n//       borderRightColor={useColorModeValue('gray.200', 'gray.700')}\r\n//       w={{ base: 'full', md: 60 }}\r\n//       pos=\"fixed\"\r\n//       h=\"full\"\r\n//       {...rest}>\r\n//       <Flex h=\"20\" alignItems=\"center\" mx=\"8\" justifyContent=\"space-between\">\r\n//         <Text fontSize=\"2xl\" fontFamily=\"monospace\" fontWeight=\"bold\">\r\n//           Logo\r\n//         </Text>\r\n//         <CloseButton display={{ base: 'flex', md: 'none' }} onClick={onClose} />\r\n//       </Flex>\r\n//       {LinkItems.map((link) => (\r\n//         <NavItem key={link.name} icon={link.icon}>\r\n//           {link.name}\r\n//         </NavItem>\r\n//       ))}\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// interface NavItemProps extends FlexProps {\r\n//   icon: IconType;\r\n//   children: ReactText;\r\n// }\r\n// const NavItem = ({ icon, children, ...rest }: NavItemProps) => {\r\n//   return (\r\n//     <Link\r\n//       href=\"#\"\r\n//       style={{ textDecoration: 'none' }}\r\n//       _focus={{ boxShadow: 'none' }}>\r\n//       <Flex\r\n//         align=\"center\"\r\n//         p=\"4\"\r\n//         mx=\"4\"\r\n//         borderRadius=\"lg\"\r\n//         role=\"group\"\r\n//         cursor=\"pointer\"\r\n//         _hover={{\r\n//           bg: 'cyan.400',\r\n//           color: 'white',\r\n//         }}\r\n//         {...rest}>\r\n//         {icon && (\r\n//           <Icon\r\n//             mr=\"4\"\r\n//             fontSize=\"16\"\r\n//             _groupHover={{\r\n//               color: 'white',\r\n//             }}\r\n//             as={icon}\r\n//           />\r\n//         )}\r\n//         {children}\r\n//       </Flex>\r\n//     </Link>\r\n//   );\r\n// };\r\n\r\n// interface MobileProps extends FlexProps {\r\n//   onOpen: () => void;\r\n// }\r\n// const MobileNav = ({ onOpen, ...rest }: MobileProps) => {\r\n//   return (\r\n//     <Flex\r\n//       ml={{ base: 0, md: 60 }}\r\n//       px={{ base: 4, md: 4 }}\r\n//       height=\"20\"\r\n//       alignItems=\"center\"\r\n//       bg={useColorModeValue('white', 'gray.900')}\r\n//       borderBottomWidth=\"1px\"\r\n//       borderBottomColor={useColorModeValue('gray.200', 'gray.700')}\r\n//       justifyContent={{ base: 'space-between', md: 'flex-end' }}\r\n//       {...rest}>\r\n//       <IconButton\r\n//         display={{ base: 'flex', md: 'none' }}\r\n//         onClick={onOpen}\r\n//         variant=\"outline\"\r\n//         aria-label=\"open menu\"\r\n//         icon={<FiMenu />}\r\n//       />\r\n\r\n//       <Text\r\n//         display={{ base: 'flex', md: 'none' }}\r\n//         fontSize=\"2xl\"\r\n//         fontFamily=\"monospace\"\r\n//         fontWeight=\"bold\">\r\n//         Logo\r\n//       </Text>\r\n\r\n//       <HStack spacing={{ base: '0', md: '6' }}>\r\n//         <IconButton\r\n//           size=\"lg\"\r\n//           variant=\"ghost\"\r\n//           aria-label=\"open menu\"\r\n//           icon={<FiBell />}\r\n//         />\r\n//         <Flex alignItems={'center'}>\r\n//           <Menu>\r\n//             <MenuButton\r\n//               py={2}\r\n//               transition=\"all 0.3s\"\r\n//               _focus={{ boxShadow: 'none' }}>\r\n//               <HStack>\r\n//                 <Avatar\r\n//                   size={'sm'}\r\n//                   src={\r\n//                     'https://images.unsplash.com/photo-1619946794135-5bc917a27793?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=b616b2c5b373a80ffc9636ba24f7a4a9'\r\n//                   }\r\n//                 />\r\n//                 <VStack\r\n//                   display={{ base: 'none', md: 'flex' }}\r\n//                   alignItems=\"flex-start\"\r\n//                   spacing=\"1px\"\r\n//                   ml=\"2\">\r\n//                   <Text fontSize=\"sm\">Justina Clark</Text>\r\n//                   <Text fontSize=\"xs\" color=\"gray.600\">\r\n//                     Admin\r\n//                   </Text>\r\n//                 </VStack>\r\n//                 <Box display={{ base: 'none', md: 'flex' }}>\r\n//                   <FiChevronDown />\r\n//                 </Box>\r\n//               </HStack>\r\n//             </MenuButton>\r\n//             <MenuList\r\n//               bg={useColorModeValue('white', 'gray.900')}\r\n//               borderColor={useColorModeValue('gray.200', 'gray.700')}>\r\n//               <MenuItem>Profile</MenuItem>\r\n//               <MenuItem>Settings</MenuItem>\r\n//               <MenuItem>Billing</MenuItem>\r\n//               <MenuDivider />\r\n//               <MenuItem>Sign out</MenuItem>\r\n//             </MenuList>\r\n//           </Menu>\r\n//         </Flex>\r\n//       </HStack>\r\n//     </Flex>\r\n//   );\r\n// };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}