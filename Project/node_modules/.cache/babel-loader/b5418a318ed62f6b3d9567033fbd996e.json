{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/Bhavesh/Desktop/Visual Studio/bhavesh_khandar_fw21_0749/unit-4/sprint-4/day-4/assignments/Project/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _createForOfIteratorHelper = require(\"C:/Users/Bhavesh/Desktop/Visual Studio/bhavesh_khandar_fw21_0749/unit-4/sprint-4/day-4/assignments/Project/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _toConsumableArray = require(\"C:/Users/Bhavesh/Desktop/Visual Studio/bhavesh_khandar_fw21_0749/unit-4/sprint-4/day-4/assignments/Project/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar tslib = require('tslib');\nvar heyListen = require('hey-listen');\nvar utils = require('@motionone/utils');\nvar animateStyle = require('../animate/animate-style.cjs.js');\nvar style = require('../animate/style.cjs.js');\nvar options = require('../animate/utils/options.cjs.js');\nvar hasChanged = require('./utils/has-changed.cjs.js');\nvar resolveVariant = require('./utils/resolve-variant.cjs.js');\nvar schedule = require('./utils/schedule.cjs.js');\nvar inView = require('./gestures/in-view.cjs.js');\nvar hover = require('./gestures/hover.cjs.js');\nvar press = require('./gestures/press.cjs.js');\nvar events = require('./utils/events.cjs.js');\nvar gestures = {\n  inView: inView.inView,\n  hover: hover.hover,\n  press: press.press\n};\n/**\n * A list of state types, in priority order. If a value is defined in\n * a righter-most type, it will override any definition in a lefter-most.\n */\nvar stateTypes = [\"initial\", \"animate\"].concat(_toConsumableArray(Object.keys(gestures)), [\"exit\"]);\n/**\n * A global store of all generated motion states. This can be used to lookup\n * a motion state for a given Element.\n */\nvar mountedStates = new WeakMap();\nfunction createMotionState() {\n  var _marked = /*#__PURE__*/_regeneratorRuntime().mark(animateUpdates);\n  var options$1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var parent = arguments.length > 1 ? arguments[1] : undefined;\n  /**\n   * The element represented by the motion state. This is an empty reference\n   * when we create the state to support SSR and allow for later mounting\n   * in view libraries.\n   *\n   * @ts-ignore\n   */\n  var element;\n  /**\n   * Calculate a depth that we can use to order motion states by tree depth.\n   */\n  var depth = parent ? parent.getDepth() + 1 : 0;\n  /**\n   * Track which states are currently active.\n   */\n  var activeStates = {\n    initial: true,\n    animate: true\n  };\n  /**\n   * A map of functions that, when called, will remove event listeners for\n   * a given gesture.\n   */\n  var gestureSubscriptions = {};\n  /**\n   * Initialise a context to share through motion states. This\n   * will be populated by variant names (if any).\n   */\n  var context = {};\n  var _iterator = _createForOfIteratorHelper(stateTypes),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var name = _step.value;\n      context[name] = typeof options$1[name] === \"string\" ? options$1[name] : parent === null || parent === void 0 ? void 0 : parent.getContext()[name];\n    }\n    /**\n     * If initial is set to false we use the animate prop as the initial\n     * animation state.\n     */\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var initialVariantSource = options$1.initial === false ? \"animate\" : \"initial\";\n  /**\n   * Destructure an initial target out from the resolved initial variant.\n   */\n  var _a = resolveVariant.resolveVariant(options$1[initialVariantSource] || context[initialVariantSource], options$1.variants) || {},\n    target = tslib.__rest(_a, [\"transition\"]);\n  /**\n   * The base target is a cached map of values that we'll use to animate\n   * back to if a value is removed from all active state types. This\n   * is usually the initial value as read from the DOM, for instance if\n   * it hasn't been defined in initial.\n   */\n  var baseTarget = Object.assign({}, target);\n  /**\n   * A generator that will be processed by the global animation scheduler.\n   * This yeilds when it switches from reading the DOM to writing to it\n   * to prevent layout thrashing.\n   */\n  function animateUpdates() {\n    var _a, _b, prevTarget, animationOptions, _iterator2, _step2, name, variant, key, allTargetKeys, animationFactories, animations, animationTarget;\n    return _regeneratorRuntime().wrap(function animateUpdates$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            prevTarget = target;\n            target = {};\n            animationOptions = {};\n            _iterator2 = _createForOfIteratorHelper(stateTypes);\n            _context.prev = 4;\n            _iterator2.s();\n          case 6:\n            if ((_step2 = _iterator2.n()).done) {\n              _context.next = 24;\n              break;\n            }\n            name = _step2.value;\n            if (activeStates[name]) {\n              _context.next = 10;\n              break;\n            }\n            return _context.abrupt(\"continue\", 22);\n          case 10:\n            variant = resolveVariant.resolveVariant(options$1[name]);\n            if (variant) {\n              _context.next = 13;\n              break;\n            }\n            return _context.abrupt(\"continue\", 22);\n          case 13:\n            _context.t0 = _regeneratorRuntime().keys(variant);\n          case 14:\n            if ((_context.t1 = _context.t0()).done) {\n              _context.next = 22;\n              break;\n            }\n            key = _context.t1.value;\n            if (!(key === \"transition\")) {\n              _context.next = 18;\n              break;\n            }\n            return _context.abrupt(\"continue\", 14);\n          case 18:\n            target[key] = variant[key];\n            animationOptions[key] = options.getOptions((_b = (_a = variant.transition) !== null && _a !== void 0 ? _a : options$1.transition) !== null && _b !== void 0 ? _b : {}, key);\n            _context.next = 14;\n            break;\n          case 22:\n            _context.next = 6;\n            break;\n          case 24:\n            _context.next = 29;\n            break;\n          case 26:\n            _context.prev = 26;\n            _context.t2 = _context[\"catch\"](4);\n            _iterator2.e(_context.t2);\n          case 29:\n            _context.prev = 29;\n            _iterator2.f();\n            return _context.finish(29);\n          case 32:\n            allTargetKeys = new Set([].concat(_toConsumableArray(Object.keys(target)), _toConsumableArray(Object.keys(prevTarget))));\n            animationFactories = [];\n            allTargetKeys.forEach(function (key) {\n              var _a;\n              if (target[key] === undefined) {\n                target[key] = baseTarget[key];\n              }\n              if (hasChanged.hasChanged(prevTarget[key], target[key])) {\n                (_a = baseTarget[key]) !== null && _a !== void 0 ? _a : baseTarget[key] = style.style.get(element, key);\n                animationFactories.push(animateStyle.animateStyle(element, key, target[key], animationOptions[key]));\n              }\n            });\n            // Wait for all animation states to read from the DOM\n            _context.next = 37;\n            return;\n          case 37:\n            animations = animationFactories.map(function (factory) {\n              return factory();\n            }).filter(Boolean);\n            if (animations.length) {\n              _context.next = 40;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 40:\n            animationTarget = target;\n            element.dispatchEvent(events.motionEvent(\"motionstart\", animationTarget));\n            Promise.all(animations.map(function (animation) {\n              return animation.finished;\n            })).then(function () {\n              element.dispatchEvent(events.motionEvent(\"motioncomplete\", animationTarget));\n            }).catch(utils.noop);\n          case 43:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _marked, null, [[4, 26, 29, 32]]);\n  }\n  var setGesture = function setGesture(name, isActive) {\n    return function () {\n      activeStates[name] = isActive;\n      schedule.scheduleAnimation(state);\n    };\n  };\n  var updateGestureSubscriptions = function updateGestureSubscriptions() {\n    for (var name in gestures) {\n      var isGestureActive = gestures[name].isActive(options$1);\n      var remove = gestureSubscriptions[name];\n      if (isGestureActive && !remove) {\n        gestureSubscriptions[name] = gestures[name].subscribe(element, {\n          enable: setGesture(name, true),\n          disable: setGesture(name, false)\n        }, options$1);\n      } else if (!isGestureActive && remove) {\n        remove();\n        delete gestureSubscriptions[name];\n      }\n    }\n  };\n  var state = {\n    update: function update(newOptions) {\n      if (!element) return;\n      options$1 = newOptions;\n      updateGestureSubscriptions();\n      schedule.scheduleAnimation(state);\n    },\n    setActive: function setActive(name, isActive) {\n      if (!element) return;\n      activeStates[name] = isActive;\n      schedule.scheduleAnimation(state);\n    },\n    animateUpdates: animateUpdates,\n    getDepth: function getDepth() {\n      return depth;\n    },\n    getTarget: function getTarget() {\n      return target;\n    },\n    getOptions: function getOptions() {\n      return options$1;\n    },\n    getContext: function getContext() {\n      return context;\n    },\n    mount: function mount(newElement) {\n      heyListen.invariant(Boolean(newElement), \"Animation state must be mounted with valid Element\");\n      element = newElement;\n      mountedStates.set(element, state);\n      updateGestureSubscriptions();\n      return function () {\n        mountedStates.delete(element);\n        schedule.unscheduleAnimation(state);\n        for (var key in gestureSubscriptions) {\n          gestureSubscriptions[key]();\n        }\n      };\n    },\n    isMounted: function isMounted() {\n      return Boolean(element);\n    }\n  };\n  return state;\n}\nexports.createMotionState = createMotionState;\nexports.mountedStates = mountedStates;","map":{"version":3,"names":["Object","defineProperty","exports","value","tslib","require","heyListen","utils","animateStyle","style","options","hasChanged","resolveVariant","schedule","inView","hover","press","events","gestures","stateTypes","keys","mountedStates","WeakMap","createMotionState","animateUpdates","options$1","parent","element","depth","getDepth","activeStates","initial","animate","gestureSubscriptions","context","name","getContext","initialVariantSource","_a","variants","target","__rest","baseTarget","assign","prevTarget","animationOptions","variant","key","getOptions","_b","transition","allTargetKeys","Set","animationFactories","forEach","undefined","get","push","animations","map","factory","filter","Boolean","length","animationTarget","dispatchEvent","motionEvent","Promise","all","animation","finished","then","catch","noop","setGesture","isActive","scheduleAnimation","state","updateGestureSubscriptions","isGestureActive","remove","subscribe","enable","disable","update","newOptions","setActive","getTarget","mount","newElement","invariant","set","delete","unscheduleAnimation","isMounted"],"sources":["C:/Users/Bhavesh/Desktop/Visual Studio/bhavesh_khandar_fw21_0749/unit-4/sprint-4/day-4/assignments/Project/node_modules/@motionone/dom/dist/state/index.cjs.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\nvar heyListen = require('hey-listen');\nvar utils = require('@motionone/utils');\nvar animateStyle = require('../animate/animate-style.cjs.js');\nvar style = require('../animate/style.cjs.js');\nvar options = require('../animate/utils/options.cjs.js');\nvar hasChanged = require('./utils/has-changed.cjs.js');\nvar resolveVariant = require('./utils/resolve-variant.cjs.js');\nvar schedule = require('./utils/schedule.cjs.js');\nvar inView = require('./gestures/in-view.cjs.js');\nvar hover = require('./gestures/hover.cjs.js');\nvar press = require('./gestures/press.cjs.js');\nvar events = require('./utils/events.cjs.js');\n\nconst gestures = { inView: inView.inView, hover: hover.hover, press: press.press };\n/**\n * A list of state types, in priority order. If a value is defined in\n * a righter-most type, it will override any definition in a lefter-most.\n */\nconst stateTypes = [\"initial\", \"animate\", ...Object.keys(gestures), \"exit\"];\n/**\n * A global store of all generated motion states. This can be used to lookup\n * a motion state for a given Element.\n */\nconst mountedStates = new WeakMap();\nfunction createMotionState(options$1 = {}, parent) {\n    /**\n     * The element represented by the motion state. This is an empty reference\n     * when we create the state to support SSR and allow for later mounting\n     * in view libraries.\n     *\n     * @ts-ignore\n     */\n    let element;\n    /**\n     * Calculate a depth that we can use to order motion states by tree depth.\n     */\n    let depth = parent ? parent.getDepth() + 1 : 0;\n    /**\n     * Track which states are currently active.\n     */\n    const activeStates = { initial: true, animate: true };\n    /**\n     * A map of functions that, when called, will remove event listeners for\n     * a given gesture.\n     */\n    const gestureSubscriptions = {};\n    /**\n     * Initialise a context to share through motion states. This\n     * will be populated by variant names (if any).\n     */\n    const context = {};\n    for (const name of stateTypes) {\n        context[name] =\n            typeof options$1[name] === \"string\"\n                ? options$1[name]\n                : parent === null || parent === void 0 ? void 0 : parent.getContext()[name];\n    }\n    /**\n     * If initial is set to false we use the animate prop as the initial\n     * animation state.\n     */\n    const initialVariantSource = options$1.initial === false ? \"animate\" : \"initial\";\n    /**\n     * Destructure an initial target out from the resolved initial variant.\n     */\n    let _a = resolveVariant.resolveVariant(options$1[initialVariantSource] || context[initialVariantSource], options$1.variants) || {}, target = tslib.__rest(_a, [\"transition\"]);\n    /**\n     * The base target is a cached map of values that we'll use to animate\n     * back to if a value is removed from all active state types. This\n     * is usually the initial value as read from the DOM, for instance if\n     * it hasn't been defined in initial.\n     */\n    const baseTarget = Object.assign({}, target);\n    /**\n     * A generator that will be processed by the global animation scheduler.\n     * This yeilds when it switches from reading the DOM to writing to it\n     * to prevent layout thrashing.\n     */\n    function* animateUpdates() {\n        var _a, _b;\n        const prevTarget = target;\n        target = {};\n        const animationOptions = {};\n        for (const name of stateTypes) {\n            if (!activeStates[name])\n                continue;\n            const variant = resolveVariant.resolveVariant(options$1[name]);\n            if (!variant)\n                continue;\n            for (const key in variant) {\n                if (key === \"transition\")\n                    continue;\n                target[key] = variant[key];\n                animationOptions[key] = options.getOptions((_b = (_a = variant.transition) !== null && _a !== void 0 ? _a : options$1.transition) !== null && _b !== void 0 ? _b : {}, key);\n            }\n        }\n        const allTargetKeys = new Set([\n            ...Object.keys(target),\n            ...Object.keys(prevTarget),\n        ]);\n        const animationFactories = [];\n        allTargetKeys.forEach((key) => {\n            var _a;\n            if (target[key] === undefined) {\n                target[key] = baseTarget[key];\n            }\n            if (hasChanged.hasChanged(prevTarget[key], target[key])) {\n                (_a = baseTarget[key]) !== null && _a !== void 0 ? _a : (baseTarget[key] = style.style.get(element, key));\n                animationFactories.push(animateStyle.animateStyle(element, key, target[key], animationOptions[key]));\n            }\n        });\n        // Wait for all animation states to read from the DOM\n        yield;\n        const animations = animationFactories\n            .map((factory) => factory())\n            .filter(Boolean);\n        if (!animations.length)\n            return;\n        const animationTarget = target;\n        element.dispatchEvent(events.motionEvent(\"motionstart\", animationTarget));\n        Promise.all(animations.map((animation) => animation.finished))\n            .then(() => {\n            element.dispatchEvent(events.motionEvent(\"motioncomplete\", animationTarget));\n        })\n            .catch(utils.noop);\n    }\n    const setGesture = (name, isActive) => () => {\n        activeStates[name] = isActive;\n        schedule.scheduleAnimation(state);\n    };\n    const updateGestureSubscriptions = () => {\n        for (const name in gestures) {\n            const isGestureActive = gestures[name].isActive(options$1);\n            const remove = gestureSubscriptions[name];\n            if (isGestureActive && !remove) {\n                gestureSubscriptions[name] = gestures[name].subscribe(element, {\n                    enable: setGesture(name, true),\n                    disable: setGesture(name, false),\n                }, options$1);\n            }\n            else if (!isGestureActive && remove) {\n                remove();\n                delete gestureSubscriptions[name];\n            }\n        }\n    };\n    const state = {\n        update: (newOptions) => {\n            if (!element)\n                return;\n            options$1 = newOptions;\n            updateGestureSubscriptions();\n            schedule.scheduleAnimation(state);\n        },\n        setActive: (name, isActive) => {\n            if (!element)\n                return;\n            activeStates[name] = isActive;\n            schedule.scheduleAnimation(state);\n        },\n        animateUpdates,\n        getDepth: () => depth,\n        getTarget: () => target,\n        getOptions: () => options$1,\n        getContext: () => context,\n        mount: (newElement) => {\n            heyListen.invariant(Boolean(newElement), \"Animation state must be mounted with valid Element\");\n            element = newElement;\n            mountedStates.set(element, state);\n            updateGestureSubscriptions();\n            return () => {\n                mountedStates.delete(element);\n                schedule.unscheduleAnimation(state);\n                for (const key in gestureSubscriptions) {\n                    gestureSubscriptions[key]();\n                }\n            };\n        },\n        isMounted: () => Boolean(element),\n    };\n    return state;\n}\n\nexports.createMotionState = createMotionState;\nexports.mountedStates = mountedStates;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}